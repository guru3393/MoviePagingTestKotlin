// Generated by data binding compiler. Do not edit!
package com.guru.moviepagingtest.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.guru.moviepagingtest.R;
import com.guru.moviepagingtest.movie_details.MovieDetails;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ActivityMovieDetailsBinding extends ViewDataBinding {
  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-sw600dp-land/</li>
   * </ul>
   */
  @Nullable
  public final TextView dividerOne;

  @NonNull
  public final TextView genresTextView;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-sw600dp-land/</li>
   * </ul>
   */
  @Nullable
  public final RelativeLayout imagelayout;

  @NonNull
  public final TextView languageTextView;

  @NonNull
  public final TextView overviewTextView;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-sw600dp-land/</li>
   * </ul>
   */
  @Nullable
  public final ImageView playBtn;

  @NonNull
  public final ImageView posterPathImageView;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-sw600dp-land/</li>
   * </ul>
   */
  @Nullable
  public final LinearLayout secondlayout;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-sw600dp-land/</li>
   * </ul>
   */
  @Nullable
  public final TextView timeTextView;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-sw600dp-land/</li>
   * </ul>
   */
  @Nullable
  public final TextView title;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-sw600dp-land/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final TextView titleAndReleaseDateTextView;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-sw600dp-land/</li>
   * </ul>
   */
  @Nullable
  public final TextView yearText;

  @Bindable
  protected MovieDetails mMovieDetails;

  protected ActivityMovieDetailsBinding(Object _bindingComponent, View _root, int _localFieldCount,
      TextView dividerOne, TextView genresTextView, RelativeLayout imagelayout,
      TextView languageTextView, TextView overviewTextView, ImageView playBtn,
      ImageView posterPathImageView, LinearLayout secondlayout, TextView timeTextView,
      TextView title, TextView titleAndReleaseDateTextView, TextView yearText) {
    super(_bindingComponent, _root, _localFieldCount);
    this.dividerOne = dividerOne;
    this.genresTextView = genresTextView;
    this.imagelayout = imagelayout;
    this.languageTextView = languageTextView;
    this.overviewTextView = overviewTextView;
    this.playBtn = playBtn;
    this.posterPathImageView = posterPathImageView;
    this.secondlayout = secondlayout;
    this.timeTextView = timeTextView;
    this.title = title;
    this.titleAndReleaseDateTextView = titleAndReleaseDateTextView;
    this.yearText = yearText;
  }

  public abstract void setMovieDetails(@Nullable MovieDetails movieDetails);

  @Nullable
  public MovieDetails getMovieDetails() {
    return mMovieDetails;
  }

  @NonNull
  public static ActivityMovieDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_movie_details, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ActivityMovieDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ActivityMovieDetailsBinding>inflateInternal(inflater, R.layout.activity_movie_details, root, attachToRoot, component);
  }

  @NonNull
  public static ActivityMovieDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_movie_details, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ActivityMovieDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ActivityMovieDetailsBinding>inflateInternal(inflater, R.layout.activity_movie_details, null, false, component);
  }

  public static ActivityMovieDetailsBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ActivityMovieDetailsBinding bind(@NonNull View view, @Nullable Object component) {
    return (ActivityMovieDetailsBinding)bind(component, view, R.layout.activity_movie_details);
  }
}
